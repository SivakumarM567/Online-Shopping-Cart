// <auto-generated />
using System;
using EShoppingZoneAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EShoppingZoneAPI.Migrations
{
    [DbContext(typeof(ShoppingDbContext))]
    partial class ShoppingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EShoppingZoneAPI.Models.Order", b =>
                {
                    b.Property<Guid>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Order_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order_quantity")
                        .HasColumnType("int");

                    b.Property<float>("Order_totalAmount")
                        .HasColumnType("real");

                    b.Property<Guid?>("User_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Order_id");

                    b.HasIndex("User_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.Payment", b =>
                {
                    b.Property<Guid>("Payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Order_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payment_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("User_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Payment_id");

                    b.HasIndex("Order_id");

                    b.HasIndex("User_id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.TransactionHistory", b =>
                {
                    b.Property<Guid>("Transaction_reportid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Order_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Payment_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("User_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Transaction_reportid");

                    b.HasIndex("Order_id");

                    b.HasIndex("Payment_id");

                    b.HasIndex("User_id");

                    b.ToTable("TransactionHistorys");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.User", b =>
                {
                    b.Property<Guid>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserTypeUser_type_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_contact")
                        .HasColumnType("int");

                    b.Property<string>("User_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_id");

                    b.HasIndex("UserTypeUser_type_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.UserType", b =>
                {
                    b.Property<Guid>("User_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_type_id");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.Order", b =>
                {
                    b.HasOne("EShoppingZoneAPI.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("User_id");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.Payment", b =>
                {
                    b.HasOne("EShoppingZoneAPI.Models.Order", null)
                        .WithMany("Payments")
                        .HasForeignKey("Order_id");

                    b.HasOne("EShoppingZoneAPI.Models.User", null)
                        .WithMany("Payments")
                        .HasForeignKey("User_id");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.TransactionHistory", b =>
                {
                    b.HasOne("EShoppingZoneAPI.Models.Order", null)
                        .WithMany("TransactionHistorys")
                        .HasForeignKey("Order_id");

                    b.HasOne("EShoppingZoneAPI.Models.Payment", null)
                        .WithMany("TransactionHistorys")
                        .HasForeignKey("Payment_id");

                    b.HasOne("EShoppingZoneAPI.Models.User", null)
                        .WithMany("TransactionHistorys")
                        .HasForeignKey("User_id");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.User", b =>
                {
                    b.HasOne("EShoppingZoneAPI.Models.UserType", null)
                        .WithMany("Users")
                        .HasForeignKey("UserTypeUser_type_id");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.Order", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("TransactionHistorys");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.Payment", b =>
                {
                    b.Navigation("TransactionHistorys");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("TransactionHistorys");
                });

            modelBuilder.Entity("EShoppingZoneAPI.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
